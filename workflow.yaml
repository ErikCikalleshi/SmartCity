Comment: >-
  A Hello World example demonstrating various state types of the Amazon States
  Language. It is composed of flow control states only, so it does not need
  resources to run.
StartAt: Lambda Invoke on S3 PUT
States:
  Lambda Invoke on S3 PUT:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    OutputPath: $.Payload
    Parameters:
      Payload.$: $
      FunctionName: arn:aws:lambda:us-east-1:565390098582:function:lmbda_trigger:$LATEST
    Retry:
      - ErrorEquals:
          - Lambda.ServiceException
          - Lambda.AWSLambdaException
          - Lambda.SdkClientException
          - Lambda.TooManyRequestsException
        IntervalSeconds: 1
        MaxAttempts: 3
        BackoffRate: 2
    Next: Parallel
  Parallel:
    Type: Parallel
    Branches:
      - StartAt: Filter Violence
        States:
          Filter Violence:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: >-
                arn:aws:lambda:us-east-1:565390098582:function:filterViolence:$LATEST
            Retry:
              - ErrorEquals:
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: 3
                BackoffRate: 2
            Next: detected violence
          detected violence:
            Type: Choice
            Default: Success
            Choices:
              - Variable: $.fightingPresent
                BooleanEquals: true
                Next: SNS Publish
          SNS Publish:
            Type: Task
            Resource: arn:aws:states:::sns:publish
            Parameters:
              TopicArn: arn:aws:sns:us-east-1:565390098582:Violence
              Message: >-
                Attention! There was violence detected. Go to the Smart City
                Monitoring Website to see further information
            Next: Create description and export video (1)
            ResultPath: null
          Success:
            Type: Succeed
          Create description and export video (1):
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: >-
                arn:aws:lambda:us-east-1:565390098582:function:CreatePoliceDescription:$LATEST
            Retry:
              - ErrorEquals:
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: 3
                BackoffRate: 2
            End: true
      - StartAt: Filter Fire
        States:
          Filter Fire:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: >-
                arn:aws:lambda:us-east-1:565390098582:function:filterFire:$LATEST
            Retry:
              - ErrorEquals:
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: 3
                BackoffRate: 2
            Next: recognised fire
          recognised fire:
            Type: Choice
            Choices:
              - Variable: $.firePresent
                BooleanEquals: true
                Next: SNS Publish Fire
            Default: Success (1)
          SNS Publish Fire:
            Type: Task
            Resource: arn:aws:states:::sns:publish
            Parameters:
              TopicArn: arn:aws:sns:us-east-1:565390098582:Fire
              Message: >-
                Attention! There was fire detected. Go to the Smart City
                Monitoring Website to see further information
            Next: Create description and export video
            ResultPath: null
          Success (1):
            Type: Succeed
          Create description and export video:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: >-
                arn:aws:lambda:us-east-1:565390098582:function:CreateFireDescription:$LATEST
            Retry:
              - ErrorEquals:
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: 3
                BackoffRate: 2
            End: true
      - StartAt: FilterSmokingPerson
        States:
          FilterSmokingPerson:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: >-
                arn:aws:lambda:us-east-1:565390098582:function:filterSmokingPerson:$LATEST
            Retry:
              - ErrorEquals:
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: 3
                BackoffRate: 2
            Next: PersonSmoking
          PersonSmoking:
            Type: Choice
            Choices:
              - Variable: $.personSmoking
                BooleanEquals: true
                Next: perform Post on Billboards
            Default: Success (2)
          perform Post on Billboards:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: >-
                arn:aws:lambda:us-east-1:565390098582:function:CreateBillboard:$LATEST
            Retry:
              - ErrorEquals:
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: 3
                BackoffRate: 2
            End: true
          Success (2):
            Type: Succeed
    End: true